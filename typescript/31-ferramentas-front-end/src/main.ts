// ==================== FERRAMENTAS FRONT-END ====================
// Nesta aula, vamos explorar como o TypeScript pode ser integrado a uma ferramenta moderna de desenvolvimento front-end.
// A biblioteca escolhida para isso foi a **Vite**.

// ====== VITE ======
// O Vite √© uma ferramenta de automa√ß√£o Front-End. Com ele, podemos:
// - Gerar bundles;
// - Iniciar um live server;
// - Otimizar o c√≥digo para produ√ß√£o e muito mais.
//
// **Vantagem principal:** Automatiza tarefas como iniciar o live server e compilar o TypeScript, simplificando o fluxo de trabalho. üí°

// ====== BENEF√çCIOS (VITE) ======
// - **Configura√ß√£o m√≠nima:** Funciona bem com poucas configura√ß√µes iniciais.
// - **R√°pido e eficiente:** Fornece um ambiente de desenvolvimento ultrarr√°pido e simplifica o build de produ√ß√£o.

// ====== COMO INICIAR (VITE) ======
// Etapas para iniciar um projeto com Vite:
// 1. Cria√ß√£o do projeto (dentro da pasta atual):
//    ```bash
//    npm create vite@latest .
//    ```
// 2. Instalar depend√™ncias:
//    ```bash
//    npm install
//    ```
// 3. Comandos principais:
//    ```bash
//    npm run dev    // Inicia o servidor de desenvolvimento
//    npm run build  // Gera o build de produ√ß√£o
//    ```

// ====== INSTALANDO BIBLIOTECAS EXTERNAS COM VITE ======
// O Vite simplifica a instala√ß√£o de bibliotecas externas com `npm install`.
// N√£o √© necess√°rio buscar depend√™ncias manualmente nem inserir scripts no HTML. üí°
//
// **Exemplo:** Instalando as bibliotecas "lodash" e "clipboard":
// ```bash
// npm install lodash ‚úÖ
// npm install --save-dev @types/lodash ‚úÖ // (os tipos n√£o v√™m por padr√£o)
//
// npm install clipboard --save ‚úÖ // (j√° inclui o arquivo .d.ts)
// ```

// ====== EXEMPLOS DE USO ======

// Exemplo 1: Usando "lodash"
import _ from "lodash";
console.log("Diferen√ßa entre as arrays:", _.difference([1, 45], [2, 1, 3]));

// Exemplo 2: Usando "clipboard"
import ClipboardJS from "clipboard";

const button = new ClipboardJS("button");

function handleCopy(event: ClipboardJS.Event) {
  // Tipando corretamente "event": Pressione CONTROL (ou COMMAND) + clique sobre a fun√ß√£o "on", para abrir o arquivo .d.ts e verificar sua tipagem.
  // Esse √© o princ√≠pio ao utilizar bibliotecas externas tipadas. üí°

  console.log("Texto copiado:", event.text); // Autocomplete funcionando ‚úÖ
  event.clearSelection();
}

button.on("success", handleCopy);
